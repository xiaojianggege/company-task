[{"D:\\company-task\\react-redux_demo\\src\\index.js":"1","D:\\company-task\\react-redux_demo\\src\\App.js":"2","D:\\company-task\\react-redux_demo\\src\\reportWebVitals.js":"3","D:\\company-task\\react-redux_demo\\src\\server\\index.js":"4","D:\\company-task\\react-redux_demo\\src\\components\\Order.js":"5","D:\\company-task\\react-redux_demo\\src\\untils\\formatting.js":"6"},{"size":461,"mtime":1607504809153,"results":"7","hashOfConfig":"8"},{"size":7112,"mtime":1607605743101,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1790,"mtime":1607604090754,"results":"11","hashOfConfig":"8"},{"size":6163,"mtime":1607598623061,"results":"12","hashOfConfig":"8"},{"size":1080,"mtime":1607604325102,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"mrbpc7",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\company-task\\react-redux_demo\\src\\index.js",[],["28","29"],"D:\\company-task\\react-redux_demo\\src\\App.js",["30","31"],"D:\\company-task\\react-redux_demo\\src\\reportWebVitals.js",[],"D:\\company-task\\react-redux_demo\\src\\server\\index.js",[],"D:\\company-task\\react-redux_demo\\src\\components\\Order.js",["32"],"import React from 'react'\r\nimport { MessageOutlined, FilterOutlined, CopyOutlined, ProfileOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nconst statusObj = {\r\n    WAIT_SELLER_SEND_GOODS: '待发货',\r\n    TRADE_FINISHED: '已成功',\r\n    WAIT_BUYER_CONFIRM_GOODS: '已发货'\r\n}\r\nclass Order extends  React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isSelected: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            isSelected: this.props.isSelected\r\n        })\r\n    }\r\n    componentWillReceiveProps(nextProps,nextContext){\r\n        if(nextProps.isSelected !== this.props.isSelected) {\r\n            if(this.state.isSelected !== nextProps.isSelected) {\r\n                this.setState({\r\n                    isSelected: nextProps.isSelected\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onChangeIsSelected = e => {\r\n        const checked = e.target.checked\r\n        this.props.changeSelectNum(checked)\r\n        this.setState({\r\n            isSelected: checked\r\n        })\r\n    }\r\n    render() {\r\n        const {isSelected} = this.state\r\n        const {status, tid, created, pic_path, title,\r\n               receiver_name, receiver_phone, receiver_city ,\r\n                receiver_town, receiver_address\r\n               } = this.props.orderInfo\r\n        const order = this.props.orderInfo.orders.order[0]\r\n        //Refund用来控制这条order订单是否有 退款成功和查看退款这个结构，如果status为'WAIT_SELLER_SEND_GOODS',则没有\r\n        const Refund = status !== 'WAIT_SELLER_SEND_GOODS' ?\r\n                                    (<div className='status'>\r\n                                            <span>退款成功</span>\r\n                                            <span className='check'>查看退款</span>\r\n                                    </div>)\r\n                                                            : ''\r\n        // 只有待发货状态下才有的发货按钮\r\n        const Ship = status === 'WAIT_SELLER_SEND_GOODS' ? (<div className='ship'>发货</div>) : ''\r\n        // 只有待发货状态下才有的收货地址组件\r\n        const shoppingAddress = status === 'WAIT_SELLER_SEND_GOODS' ? (\r\n            <div className=\"shopping-address\">\r\n                    <span className='address-text'> 收获地址 </span>\r\n                <span>{receiver_name} </span><LockOutlined  className='lock-outlined'/>\r\n                   <span>{receiver_phone}</span> <LockOutlined  className='lock-outlined'/>\r\n                   <span>{receiver_city} {receiver_town}--{receiver_address}  </span><LockOutlined  className='lock-outlined' />\r\n                <CopyOutlined className='gary-icon'/>\r\n\r\n            </div>\r\n        ) : ''\r\n        return (\r\n            // 最外面的盒子\r\n            <div className=\"order-wrapper\">\r\n                {/*第一个盒子存放上部内容（订单信息）*/}\r\n                <div className=\"order-info\">\r\n                    <input type='checkbox'  onClick={this.onChangeIsSelected} checked={isSelected}  readOnly/>\r\n                    <span className={`type-status ${status}`}>{ statusObj[status] }</span>\r\n                    <MessageOutlined className='blue-icon' />\r\n                    <span className='blue'>联系买家</span>\r\n                    <FilterOutlined className='gary-icon'/>\r\n                    <span className='deepen'>编号: {tid}</span>\r\n                    <CopyOutlined className='gary-icon'/>\r\n                    <span className='deepen'>下单时间: {created}</span>\r\n                </div>\r\n\r\n                {/*第二个盒子存放中部内容*/}\r\n                <div className=\"order-content\">\r\n                    {/*内部第一个盒子存放商品信息*/}\r\n                    <div className=\"commodity-wrapper\">\r\n\r\n                        <div className='left'>\r\n                            <div className='commodity-pic'>\r\n                                <img src={pic_path} />\r\n                            </div>\r\n                            <div className='commodity-info'>\r\n                                <p className='commodity-title'>{title}</p>\r\n                                <p className='commodity-size'>{order.sku_properties_name}</p>\r\n                                {Refund}\r\n                                {/*<div className='status'>*/}\r\n                                {/*    <span>退款成功</span>*/}\r\n                                {/*    <span className='check'>查看退款</span>*/}\r\n                                {/*</div>*/}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='set-abbreviation'>设置简称</div>\r\n                    </div>\r\n\r\n                    {/*内部第二个盒子存放--received信息*/}\r\n                    <div className='received-info'>\r\n                        <div className='received-container'>\r\n                            <span>实付</span>\r\n                            <span className='count'>￥{order.price}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span>数量</span>\r\n                            <span className='count'>{order.num}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* 内部三第个盒子存放其他信息  */}\r\n                    <div className= 'order-detail'>\r\n                        <div>\r\n                            {Ship}\r\n                            <ProfileOutlined className='gary-icon'/>\r\n                            <span className='blue'>订单详情</span>\r\n                        </div>\r\n                        <div className='print-wrapper'>\r\n                            <div className='print-blue'>打印面单</div>\r\n                            <div className='print-blue'>打发货单</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*第三个盒子存放下部内容（地址信息）*/}\r\n                { shoppingAddress }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default  Order","D:\\company-task\\react-redux_demo\\src\\untils\\formatting.js",["33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":26},{"ruleId":"38","severity":1,"message":"42","line":2,"column":8,"nodeType":"40","messageId":"41","endLine":2,"endColumn":17},{"ruleId":"43","severity":1,"message":"44","line":87,"column":33,"nodeType":"45","endLine":87,"endColumn":55},{"ruleId":"46","severity":1,"message":"47","line":28,"column":20,"nodeType":"48","messageId":"49","endLine":28,"endColumn":22},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]